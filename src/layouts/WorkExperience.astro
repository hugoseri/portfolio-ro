---
import Layout from "@layouts/Layout.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import type { CollectionEntry } from "astro:content";
import { SITE } from "@config";
import Button from "@components/Button.astro";
import { Card } from "@components/Card";
import Main from "./Main.astro";

export interface Props {
  xp: CollectionEntry<"work">;
}

const { xp } = Astro.props;

const {
  image,
  imageAlt,
  title,
  disclaimer,
} = xp.data;

const { Content } = await xp.render();

---

<Layout>
  <Header activeNav="work" />

  <Main>
  <Button 
    href="/work/" 
    title="Back to the list"
    className="sticky top-36 ml-10 max-sm:hidden"
  />
  <div class="mx-auto flex flex-col items-center w-full max-w-4xl">
    <Card className="flex flex-col gap-8 items-center">
      <h1 class="post-title mb-4 text-center">{title}</h1>

      <img
        src={image.src}
        alt={imageAlt}
        class="h-64"
      />

      {
        disclaimer &&
        <div class="italic text-center">{disclaimer}</div>
      }

      <div class="content prose-h1:font-liu prose-h1:text-2xl prose-h2:font-semibold">
        <Content />
      </div>

      <div
        class="flex flex-col-reverse items-center justify-between gap-6 sm:flex-row-reverse sm:items-end sm:gap-4"
      >
        <button
          id="back-to-top"
          class="focus-outline whitespace-nowrap py-1 hover:opacity-75 text-skin-title"
        >
          <svg xmlns="http://www.w3.org/2000/svg" class="rotate-90 fill-skin-base">
            <path
              d="M13.293 6.293 7.586 12l5.707 5.707 1.414-1.414L10.414 12l4.293-4.293z"
            ></path>
          </svg>
          <span>Back to Top</span>
        </button>
      </div>
  </Card>
  </div>
  </Main> 

  <Footer />
</Layout>

<style>
  main {
    @apply mx-auto w-full max-w-3xl px-4 pb-12;
  }
  .post-title {
    @apply text-xl font-aboreto;
  }
  .content {
    @apply flex flex-col gap-2
  }
</style>

<script is:inline data-astro-rerun>
  /** Create a progress indicator
   *  at the top */
  function createProgressBar() {
    // Create the main container div
    const progressContainer = document.createElement("div");
    progressContainer.className =
      "progress-container fixed top-20 z-50 h-1 w-full bg-transparent";

    // Create the progress bar div
    const progressBar = document.createElement("div");
    progressBar.className = "progress-bar h-1 w-0 bg-skin-light";
    progressBar.id = "myBar";

    // Append the progress bar to the progress container
    progressContainer.appendChild(progressBar);

    // Append the progress container to the document body or any other desired parent element
    document.body.appendChild(progressContainer);
  }
  createProgressBar();

  /** Update the progress bar
   *  when user scrolls */
  function updateScrollProgress() {
    document.addEventListener("scroll", () => {
      const winScroll =
        document.body.scrollTop || document.documentElement.scrollTop;
      const height =
        document.documentElement.scrollHeight -
        document.documentElement.clientHeight;
      const scrolled = (winScroll / height) * 100;
      if (document) {
        const myBar = document.getElementById("myBar");
        if (myBar) {
          myBar.style.width = scrolled + "%";
        }
      }
    });
  }
  updateScrollProgress();

  /** Scrolls the document to the top when
   * the "Back to Top" button is clicked. */
  function backToTop() {
    document.querySelector("#back-to-top")?.addEventListener("click", () => {
      document.body.scrollTop = 0; // For Safari
      document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera
    });
  }
  backToTop();

  /* Go to page start after page swap */
  document.addEventListener("astro:after-swap", () =>
    window.scrollTo({ left: 0, top: 0, behavior: "instant" })
  );
</script>
