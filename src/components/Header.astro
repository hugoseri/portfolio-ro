---
import { SITE } from "@config";
import avatar from '../assets/images/avatar.svg'

export interface Props {
  activeNav?: "resume" | "work" | "about";
}

const { activeNav } = Astro.props;
---

<header>
  <div class="nav-container">
    <div class="top-nav-wrap">
      <a href="/" class="logo whitespace-nowrap">
        <img
          src={avatar.src}
          alt={SITE.title}
          width="50px"
          height="50px"
        />
        <div>
          <div class="author">{SITE.author}</div>
          <div class="job">{SITE.job}</div>
        </div>
      </a>
      <nav id="nav-menu">
        <button
          class="hamburger-menu focus-outline"
          aria-label="Open Menu"
          aria-expanded="false"
          aria-controls="menu-items"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="1.5"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="menu-icon"
          >
            <line x1="7" y1="12" x2="21" y2="12" class="line"></line>
            <line x1="3" y1="6" x2="21" y2="6" class="line"></line>
            <line x1="12" y1="18" x2="21" y2="18" class="line"></line>
            <line x1="18" y1="6" x2="6" y2="18" class="close"></line>
            <line x1="6" y1="6" x2="18" y2="18" class="close"></line>
          </svg>
        </button>
        <ul id="menu-items" class="display-none sm:flex">
          <li>
            <a href="/resume/" class={activeNav === "resume" ? "active" : ""}>
              Resume
            </a>
          </li>
          <li>
            <a href="/work/" class={activeNav === "work" ? "active" : ""}>
              Work
            </a>
          </li>
          <li>
            <a href="/about/" class={activeNav === "about" ? "active" : ""}>
              About + Contact
            </a>
          </li>
        </ul>
      </nav>
    </div>
  </div>
</header>

<style>
  .nav-container {
    @apply mx-auto flex flex-col font-sans items-center justify-center sm:flex-row bg-skin-card w-full drop-shadow-sm;
  }
  .top-nav-wrap {
    @apply relative flex max-w-7xl w-full items-start justify-between p-2 sm:items-center;
  }
  .logo {
    @apply absolute flex flex-row gap-4 py-1 text-xl font-semibold sm:static sm:text-2xl;
  }
  .logo .author {
    @apply font-liu text-xl text-skin-heading font-light;
  }
  .logo .job {
    @apply text-sm text-skin-title font-light;
  }
  .hamburger-menu {
    @apply self-end p-2 sm:hidden h-14;
  }
  .hamburger-menu svg {
    @apply h-6 w-6 scale-125 fill-skin-base;
  }

  nav {
    @apply flex w-full flex-col items-center sm:ml-2 sm:flex-row sm:justify-end sm:space-x-4 sm:py-0;
  }
  nav ul {
    @apply flex max-sm:flex-col mt-4 w-44 gap-x-2 gap-y-2 sm:ml-0 sm:mt-0 sm:w-auto sm:gap-x-5 sm:gap-y-0;
  }
  nav ul li {
    @apply col-span-2 flex items-center justify-center;
  }
  nav ul li a {
    @apply w-full px-4 py-3 text-center font-medium hover:text-skin-title sm:my-0 sm:px-2 sm:py-1;
  }
  nav ul li:nth-last-child(2) a {
    @apply w-auto;
  }
  nav ul li:nth-last-child(1),
  nav ul li:nth-last-child(2) {
    @apply col-span-1;
  }
  nav .active {
    @apply text-skin-title;
  }
  nav a.active svg {
    @apply fill-skin-base;
  }

  nav button {
    @apply p-1;
  }
  nav button svg {
    @apply h-6 w-6 fill-skin-base;
  }

  .menu-icon line {
    @apply transition-opacity duration-75 ease-in-out;
  }
  .menu-icon .close {
    opacity: 0;
  }
  .menu-icon.is-active .line {
    @apply opacity-0;
  }
  .menu-icon.is-active .close {
    @apply opacity-100;
  }
</style>

<script>
  function toggleNav() {

    // Toggle menu
    const menuBtn = document.querySelector(".hamburger-menu");
    const menuIcon = document.querySelector(".menu-icon");
    const menuItems = document.querySelector("#menu-items");

    menuBtn?.addEventListener("click", () => {
      const menuExpanded = menuBtn.getAttribute("aria-expanded") === "true";
      menuIcon?.classList.toggle("is-active");
      menuBtn.setAttribute("aria-expanded", menuExpanded ? "false" : "true");
      menuBtn.setAttribute(
        "aria-label",
        menuExpanded ? "Open Menu" : "Close Menu"
      );
      menuItems?.classList.toggle("display-none");
    });
  }

  toggleNav();

  // Runs on view transitions navigation
  document.addEventListener("astro:after-swap", toggleNav);
</script>
